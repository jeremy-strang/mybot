using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;

namespace MapAssist.Types
{
    public static class States
    {
        public static readonly int StateCount = (int)Enum.GetValues(typeof(State)).Cast<State>().Max();

        public static readonly Color BuffColor = Color.FromArgb(0, 135, 235);
        public static readonly Color AuraColor = Color.FromArgb(245, 220, 80);
        public static readonly Color PassiveColor = Color.FromArgb(180, 180, 180); //255, 35, 55 = red/debuff //180, 180, 180 = gray/passive
        public static readonly Color DebuffColor = Color.FromArgb(255, 35, 55);

        public static Color StateColor(State state)
        {
            if (BuffStates.Contains(state)) { return BuffColor; }
            if (AuraStates.Contains(state)) { return AuraColor; }
            if (PassiveStates.Contains(state)) { return PassiveColor; }
            if (DebuffStates.Contains(state)) { return DebuffColor; }
            return Color.Gray;
        }

        public static readonly List<State> PassiveStates = new List<State> {
            State.Avoid,
            State.AxeMastery,
            State.ClawMastery,
            State.ColdMastery,
            State.CriticalStrike,
            State.Dodge,
            State.Evade,
            State.FenrisRage,
            State.FireMastery,
            State.IncreasedSpeed,
            State.IncreasedStamina,
            State.IronSkin,
            State.LightningMastery,
            State.MaceMastery,
            State.NaturalResistance,
            State.Penetrate,
            State.Pierce,
            State.PolearmMastery,
            State.TigerStrike,
            State.CobraStrike,
            State.PhoenixStrike,
            State.FistsOfFire,
            State.BladesOfIce,
            State.ClawsOfThunder,
            State.SpearMastery,
            State.BladeMastery,
            State.ThrowingMastery,
            State.Warmth,
            State.WeaponBlock
        };

        public static readonly List<State> AuraStates = new List<State> {
            State.Barbs,
            State.BlessedAim,
            State.Cleansing,
            State.Concentration,
            State.Conviction,
            State.Defiance,
            State.Fanaticism,
            State.HolyFire,
            State.HolyShock,
            State.HolyWind,
            State.Meditation,
            State.Might,
            State.OakSage,
            State.Prayer,
            State.Redemption,
            State.ResistCold,
            State.ResistFire,
            State.ResistLightning,
            State.ResistAll,
            State.Sanctuary,
            State.Stamina,
            State.Thorns,
            State.Stamina,
            State.Wolverine
        };

        public static readonly List<State> BuffStates = new List<State> {
            State.Armageddon,
            State.BattleCommand,
            State.BattleOrders,
            State.Bear,
            State.Berserk,
            State.BladeShield,
            State.Blaze,
            State.BoneArmor,
            State.ChillingArmor,
            State.CloakOfShadows,
            State.Cloaked,
            State.CycloneArmor,
            State.Enchant,
            State.EnergyShield,
            State.FeralRage,
            State.Frenzy,
            State.FrozenArmor,
            State.HolyShield,
            State.Hurricane,
            State.Inferno,
            State.InnerSight,
            State.Quickness,
            State.ShadowWarrior,
            State.ShiverArmor,
            State.Shout,
            State.SlowMissiles,
            State.ThunderStorm,
            State.Valkyrie,
            State.Venom,
            State.Wolf,
            State.Fade
        };

        public static readonly List<State> DebuffStates = new List<State> {
            State.AmplifyDamage,
            State.Attract,
            State.Confuse,
            State.Conversion,
            State.Decrepify,
            State.DimVision,
            State.IronMaiden,
            State.LifeTap,
            State.LowerResist,
            State.Terror,
            State.Weaken,
            State.Convicted,
            State.Poison,
            State.Frozen,
            State.Slowed,
            State.BloodMana,
            State.DefenseCurse
        };
    }

    public static class StateMasks
    {
        public static readonly uint[] gdwBitMasks = new uint[]
        {
        0x00000001, 0x00000002, 0x00000004, 0x00000008, 0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400, 0x00000800, 0x00001000, 0x00002000, 0x00004000, 0x00008000,
        0x00010000, 0x00020000, 0x00040000, 0x00080000, 0x00100000, 0x00200000, 0x00400000, 0x00800000,
        0x01000000, 0x02000000, 0x04000000, 0x08000000, 0x10000000, 0x20000000, 0x40000000, 0x80000000,
        };

        private enum StateMask
        {
            STATEMASK_NOSEND,
            STATEMASK_AURA,
            STATEMASK_HIDE,
            STATEMASK_TRANSFORM,
            STATEMASK_PGSV,
            STATEMASK_ACTIVE,
            STATEMASK_REMHIT,
            STATEMASK_DAMBLUE,
            STATEMASK_DAMRED,
            STATEMASK_ATTBLUE,
            STATEMASK_ATTRED,
            STATEMASK_CURSE,
            STATEMASK_CURABLE,
            STATEMASK_PLRSTAYDEATH,
            STATEMASK_MONSTAYDEATH,
            STATEMASK_BOSSSTAYDEATH,
            STATEMASK_DISGUISE,
            STATEMASK_RESTRICT,
            STATEMASK_BLUE,
            STATEMASK_ARMBLUE,
            STATEMASK_RFBLUE,
            STATEMASK_RCBLUE,
            STATEMASK_RLBLUE,
            STATEMASK_RPBLUE,
            STATEMASK_STAMBARBLUE,
            STATEMASK_ARMRED,
            STATEMASK_RFRED,
            STATEMASK_RCRED,
            STATEMASK_RLRED,
            STATEMASK_RPRED,
            STATEMASK_EXP,
            STATEMASK_SHATTER,
            STATEMASK_LIFE,
            STATEMASK_UDEAD,
            STATEMASK_GREEN,
            STATEMASK_NOOVERLAYS,
            STATEMASK_NOCLEAR,
            STATEMASK_BOSSINV,
            STATEMASK_MELEEONLY,
            STATEMASK_NOTONDEAD,
        };
    }

    public static class ResistColors
    {
        public static Dictionary<Resist, Color> ResistColor = new Dictionary<Resist, Color>
        {
            {Resist.Physical, Color.RosyBrown},
            {Resist.Magic, Color.DarkOrange},
            {Resist.Fire, Color.Red},
            {Resist.Lightning, Color.Yellow},
            {Resist.Cold, Color.CornflowerBlue},
            {Resist.Poison, Color.LimeGreen},
        };
    }

    public enum Resist
    {
        Physical = 0,
        Magic = 1,
        Fire = 2,
        Lightning = 3,
        Cold = 4,
        Poison = 5
    }

    public enum State
    {
        None,
        Freeze,
        Poison,
        ResistFire,
        ResistCold,
        ResistLightning,
        ResistMagic,
        PlayerBody,
        ResistAll,
        AmplifyDamage,
        FrozenArmor,
        Frozen,
        Inferno,
        Blaze,
        BoneArmor,
        Concentrate,
        Enchant,
        InnerSight,
        SkillMove,
        Weaken,
        ChillingArmor,
        Stunned,
        SpiderLay,
        DimVision,
        Slowed,
        FetishAura,
        Shout,
        Taunt,
        Conviction,
        Convicted,
        EnergyShield,
        Venom,
        BattleOrders,
        Might,
        Prayer,
        HolyFire,
        Thorns,
        Defiance,
        ThunderStorm,
        LightningBolt,
        BlessedAim,
        Stamina,
        Concentration,
        HolyWind,
        HolyWindCold,
        Cleansing,
        HolyShock,
        Sanctuary,
        Meditation,
        Fanaticism,
        Redemption,
        BattleCommand,
        PreventHeal,
        Conversion,
        Uninterruptible,
        IronMaiden,
        Terror,
        Attract,
        LifeTap,
        Confuse,
        Decrepify,
        LowerResist,
        OpenWounds,
        DoppleZon,
        CriticalStrike,
        Dodge,
        Avoid,
        Penetrate,
        Evade,
        Pierce,
        Warmth,
        FireMastery,
        LightningMastery,
        ColdMastery,
        BladeMastery,
        AxeMastery,
        MaceMastery,
        PolearmMastery,
        ThrowingMastery,
        SpearMastery,
        IncreasedStamina,
        IronSkin,
        IncreasedSpeed,
        NaturalResistance,
        FingerMageCurse,
        NoManaRegen,
        JustHit,
        SlowMissiles,
        ShiverArmor,
        BattleCry,
        Blue,
        Red,
        DeathDelay,
        Valkyrie,
        Frenzy,
        Berserk,
        Revive,
        ItemFullSet,
        SourceUnit,
        Redeemed,
        HealthPot,
        HolyShield,
        JustPortaled,
        MonFrenzy,
        CorpseNoDraw,
        Alignment,
        ManaPot,
        Shatter,
        SyncWarped,
        ConversionSave,
        Pregnant,
        OneOneOne,
        Rabies,
        DefenseCurse,
        BloodMana,
        Burning,
        DragonFlight,
        Maul,
        CorpseNoSelect,
        ShadowWarrior,
        FeralRage,
        SkillDelay,
        TigerStrike,
        CobraStrike,
        PhoenixStrike,
        FistsOfFire,
        BladesOfIce,
        ClawsOfThunder,
        ShrineArmor,
        ShrineCombat,
        ShrineResistLightning,
        ShrineResistFire,
        ShrineResistCold,
        ShrineResistPoison,
        ShrineSkill,
        ShrineManaRegen,
        ShrineStamina,
        ShrineExperience,
        FenrisRage,
        Wolf,
        Bear,
        Bloodlust,
        ChangeClass,
        Attached,
        Hurricane,
        Armageddon,
        Invisible,
        Barbs,
        Wolverine,
        OakSage,
        VineBeast,
        CycloneArmor,
        ClawMastery,
        CloakOfShadows,
        Recycled,
        WeaponBlock,
        Cloaked,
        Quickness,
        BladeShield,
        Fade,
        SummonResist,
        OakSageControl,
        WolverineControl,
        BarbsControl,
        DebugControl,
        ItemSet1,
        ItemSet2,
        ItemSet3,
        ItemSet4,
        ItemSet5,
        ItemSet6,
        Runeword,
        RestInPeace,
        CorpseExplosion,
        Whirlwind,
        FullSetGeneric,
        MonsterSet,
        Delirium,
        Antidote,
        Thawing,
        StaminaPot,
        PassiveResistFire,
        PassiveResistCold,
        PassiveResistLightning,
        UberMinion,
        Cooldown,
        SharedStash,
        HideDead
    };

    public static class Stats
    {
        public static Dictionary<Stat, int> StatShifts = new Dictionary<Stat, int>()
        {
            [Stat.MaxLife] = 8,
            [Stat.MaxMana] = 8,
            [Stat.Life] = 8,
            [Stat.Mana] = 8,
            [Stat.MaxStamina] = 8,
        };

        public static Dictionary<Stat, double> StatDivisors = new Dictionary<Stat, double>()
        {
            [Stat.LifePerLevel] = 2048,
            [Stat.ManaPerLevel] = 2048,
            [Stat.DeadlyStrikePerLevel] = 0.8,
            [Stat.MagicFindPerLevel] = 8,
            [Stat.ExtraGoldPerLevel] = 8,
            [Stat.DamageDemonPerLevel] = 8,
            [Stat.DamageUndeadPerLevel] = 8,
            [Stat.DefensePerLevel] = 8,
            [Stat.MaxDamagePerLevel] = 8,
            [Stat.MaxDamagePercentPerLevel] = 8,
            [Stat.AttackRatingUndeadPerLevel] = 2,
            [Stat.HitCausesMonsterToFlee] = 1.28,
            [Stat.PoisonLength] = 25,
            [Stat.StrengthPerLevel] = 8,
            [Stat.DexterityPerLevel] = 8,
            [Stat.VitalityPerLevel] = 8,
            [Stat.EnergyPerLevel] = 8,
        };

        public static Dictionary<Stat, double> StatInvertDivisors = new Dictionary<Stat, double>()
        {
            [Stat.ReplenishDurability] = 100,
        };

        public static List<Stat> NegativeValueStats = new List<Stat>()
        {
            Stat.EnemyFireResist,
            Stat.EnemyLightningResist,
            Stat.EnemyColdResist,
            Stat.EnemyPoisonResist,
            Stat.TargetDefense,
        };

        public enum Stat : short
        {
            Invalid = -1,
            Strength = 0,
            Energy,
            Dexterity,
            Vitality,
            StatPoints,
            SkillPoints,
            Life,
            MaxLife,
            Mana,
            MaxMana,
            Stamina,
            MaxStamina,
            Level,
            Experience,
            Gold,
            StashGold,
            EnhancedDefense,
            EnhancedDamageMax,
            EnhancedDamage,
            AttackRating,
            ChanceToBlock,
            MinDamage,
            MaxDamage,
            TwoHandedMinDamage,
            TwoHandedMaxDamage,
            DamagePercent,
            ManaRecovery,
            ManaRecoveryBonus,
            StaminaRecoveryBonus,
            LastExp,
            NextExp,
            Defense,
            DefenseVsMissiles,
            DefenseVsHth,
            NormalDamageReduction,
            MagicDamageReduction,
            DamageReduced,
            MagicResist,
            MaxMagicResist,
            FireResist,
            MaxFireResist,
            LightningResist,
            MaxLightningResist,
            ColdResist,
            MaxColdResist,
            PoisonResist,
            MaxPoisonResist,
            DamageAura,
            FireMinDamage,
            FireMaxDamage,
            LightningMinDamage,
            LightningMaxDamage,
            MagicMinDamage,
            MagicMaxDamage,
            ColdMinDamage,
            ColdMaxDamage,
            ColdLength,
            PoisonMinDamage,
            PoisonMaxDamage,
            PoisonLength,
            LifeSteal,
            LifeStealMax,
            ManaSteal,
            ManaStealMax,
            StaminaDrainMinDamage,
            StaminaDrainMaxDamage,
            StunLength,
            VelocityPercent,
            AttackRate,
            OtherAnimRate,
            Quantity,
            Value,
            Durability,
            MaxDurability,
            ReplenishLife,
            MaxDurabilityPercent,
            MaxLifePercent,
            MaxManaPercent,
            AttackerTakesDamage,
            GoldFind,
            MagicFind,
            Knockback,
            TimeDuration,
            AddClassSkills,
            Unused84,
            AddExperience,
            LifeAfterEachKill,
            ReducePrices,
            DoubleHerbDuration,
            LightRadius,
            LightColor,
            Requirements,
            LevelRequire,
            IncreasedAttackSpeed,
            LevelRequirePercent,
            LastBlockFrame,
            FasterRunWalk,
            NonClassSkill,
            State,
            FasterHitRecovery,
            PlayerCount,
            PoisonOverrideLength,
            FasterBlockRate,
            BypassUndead,
            BypassDemons,
            FasterCastRate,
            BypassBeasts,
            SingleSkill,
            SlainMonstersRestInPeace,
            CurseResistance,
            PoisonLengthReduced,
            NormalDamage,
            HitCausesMonsterToFlee,
            HitBlindsTarget,
            DamageTakenGoesToMana,
            IgnoreTargetsDefense,
            TargetDefense,
            PreventMonsterHeal,
            HalfFreezeDuration,
            AttackRatingPercent,
            MonsterDefensePerHit,
            DemonDamagePercent,
            UndeadDamagePercent,
            DemonAttackRating,
            UndeadAttackRating,
            Throwable,
            FireSkills,
            AllSkills,
            AttackerTakesLightDamage,
            IronMaidenLevel,
            LifeTapLevel,
            ThornsPercent,
            BoneArmor,
            BoneArmorMax,
            FreezesTarget,
            OpenWounds,
            CrushingBlow,
            KickDamage,
            ManaAfterKill,
            HealAfterDemonKill,
            ExtraBlood,
            DeadlyStrike,
            AbsorbFirePercent,
            AbsorbFire,
            AbsorbLightningPercent,
            AbsorbLightning,
            AbsorbMagicPercent,
            AbsorbMagic,
            AbsorbColdPercent,
            AbsorbCold,
            SlowsTarget,
            Aura,
            Indestructible,
            CannotBeFrozen,
            SlowerStaminaDrain,
            Reanimate,
            Pierce,
            MagicArrow,
            ExplosiveArrow,
            ThrowMinDamage,
            ThrowMaxDamage,
            SkillHandofAthena,
            SkillStaminaPercent,
            SkillPassiveStaminaPercent,
            SkillConcentration,
            SkillEnchant,
            SkillPierce,
            SkillConviction,
            SkillChillingArmor,
            SkillFrenzy,
            SkillDecrepify,
            SkillArmorPercent,
            Alignment,
            Target0,
            Target1,
            GoldLost,
            ConverisonLevel,
            ConverisonMaxHP,
            UnitDooverlay,
            AttackVsMonType,
            DamageVsMonType,
            Fade,
            ArmorOverridePercent,
            Unused183,
            Unused184,
            Unused185,
            Unused186,
            Unused187,
            AddSkillTab,
            Unused189,
            Unused190,
            Unused191,
            Unused192,
            Unused193,
            NumSockets,
            SkillOnAttack,
            SkillOnKill,
            SkillOnDeath,
            SkillOnHit,
            SkillOnLevelUp,
            Unused200,
            SkillOnGetHit,
            Unused202,
            Unused203,
            ItemChargedSkill,
            Unused205,
            Unused206,
            Unused207,
            Unused208,
            Unused209,
            Unused210,
            Unused211,
            Unused212,
            Unused213,
            DefensePerLevel,
            ArmorPercentPerLevel,
            LifePerLevel,
            ManaPerLevel,
            MaxDamagePerLevel,
            MaxDamagePercentPerLevel,
            StrengthPerLevel,
            DexterityPerLevel,
            EnergyPerLevel,
            VitalityPerLevel,
            AttackRatingPerLevel,
            AttackRatingPercentPerLevel,
            ColdDamageMaxPerLevel,
            FireDamageMaxPerLevel,
            LightningDamageMaxPerLevel,
            PoisonDamageMaxPerLevel,
            ResistColdPerLevel,
            ResistFirePerLevel,
            ResistLightningPerLevel,
            ResistPoisonPerLevel,
            AbsorbColdPerLevel,
            AbsorbFirePerLevel,
            AbsorbLightningPerLevel,
            AbsorbPoisonPerLevel,
            ThornsPerLevel,
            ExtraGoldPerLevel,
            MagicFindPerLevel,
            RegenStaminaPerLevel,
            StaminaPerLevel,
            DamageDemonPerLevel,
            DamageUndeadPerLevel,
            AttackRatingDemonPerLevel,
            AttackRatingUndeadPerLevel,
            CrushingBlowPerLevel,
            OpenWoundsPerLevel,
            KickDamagePerLevel,
            DeadlyStrikePerLevel,
            FindGemsPerLevel,
            ReplenishDurability,
            ReplenishQuantity,
            ExtraStack,
            FindItem,
            SlashDamage,
            SlashDamagePercent,
            CrushDamage,
            CrushDamagePercent,
            ThrustDamage,
            ThrustDamagePercent,
            AbsorbSlash,
            AbsorbCrush,
            AbsorbThrust,
            AbsorbSlashPercent,
            AbsorbCrushPercent,
            AbsorbThrustPercent,
            ArmorByTime,
            ArmorPercentByTime,
            LifeByTime,
            ManaByTime,
            MaxDamageByTime,
            MaxDamagePercentByTime,
            StrengthByTime,
            DexterityByTime,
            EnergyByTime,
            VitalityByTime,
            AttackRatingByTime,
            AttackRatingPercentByTime,
            ColdDamageMaxByTime,
            FireDamageMaxByTime,
            LightningDamageMaxByTime,
            PoisonDamageMaxByTime,
            ResistColdByTime,
            ResistFireByTime,
            ResistLightningByTime,
            ResistPoisonByTime,
            AbsorbColdByTime,
            AbsorbFireByTime,
            AbsorbLightningByTime,
            AbsorbPoisonByTime,
            FindGoldByTime,
            MagicFindByTime,
            RegenStaminaByTime,
            StaminaByTime,
            DamageDemonByTime,
            DamageUndeadByTime,
            AttackRatingDemonByTime,
            AttackRatingUndeadByTime,
            CrushingBlowByTime,
            OpenWoundsByTime,
            KickDamageByTime,
            DeadlyStrikeByTime,
            FindGemsByTime,
            PierceCold,
            PierceFire,
            PierceLightning,
            PiercePoison,
            DamageVsMonster,
            DamagePercentVsMonster,
            AttackRatingVsMonster,
            AttackRatingPercentVsMonster,
            AcVsMonster,
            AcPercentVsMonster,
            FireLength,
            BurningMin,
            BurningMax,
            ProgressiveDamage,
            ProgressiveSteal,
            ProgressiveOther,
            ProgressiveFire,
            ProgressiveCold,
            ProgressiveLightning,
            ExtraCharges,
            ProgressiveAttackRating,
            PoisonCount,
            DamageFrameRate,
            PierceIdx,
            FireSkillDamage,
            LightningSkillDamage,
            ColdSkillDamage,
            PoisonSkillDamage,
            EnemyFireResist,
            EnemyLightningResist,
            EnemyColdResist,
            EnemyPoisonResist,
            PassiveCriticalStrike,
            PassiveDodge,
            PassiveAvoid,
            PassiveEvade,
            PassiveWarmth,
            PassiveMasteryMeleeAttackRating,
            PassiveMasteryMeleeDamage,
            PassiveMasteryMeleeCritical,
            PassiveMasteryThrowAttackRating,
            PassiveMasteryThrowDamage,
            PassiveMasteryThrowCritical,
            PassiveWeaponBlock,
            SummonResist,
            ModifierListSkill,
            ModifierListLevel,
            LastSentHPPercent,
            SourceUnitType,
            SourceUnitID,
            ShortParam1,
            QuestItemDifficulty,
            PassiveMagicMastery,
            PassiveMagicPierce,
        };
    }
}
